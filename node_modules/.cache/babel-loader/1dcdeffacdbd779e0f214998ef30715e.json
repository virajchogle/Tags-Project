{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viraj\\\\Desktop\\\\HMTLCSS\\\\carnot\\\\carnotapp\\\\src\\\\components\\\\Tag.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport './Tag.css';\nimport TagItem from \"./TagItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tag() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [tags, setTags] = useState([]);\n  const [isKeyReleased, setIsKeyReleased] = useState(false);\n  const [message, setMessage] = useState('Hello');\n\n  const checkValid = input => {\n    if (!input.length) {\n      setMessage('Cant be empty');\n      return false;\n    }\n\n    if (tags.includes(input)) {\n      setMessage('Duplicate tag');\n      return false;\n    }\n  };\n\n  const onChange = e => {\n    const {\n      value\n    } = e.target;\n    setInput(value);\n  };\n\n  const onKeyDown = e => {\n    const {\n      key\n    } = e;\n    const trimmedInput = input.trim();\n\n    if ((key === ',' || key === \"Enter\") && checkValid(trimmedInput)) {\n      e.preventDefault();\n      setTags(prevState => [...prevState, trimmedInput]);\n      setInput('');\n    }\n\n    if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\n      const tagsCopy = [...tags];\n      const poppedTag = tagsCopy.pop();\n      e.preventDefault();\n      setTags(tagsCopy);\n      setInput(poppedTag);\n    }\n\n    setIsKeyReleased(false);\n  };\n\n  const onKeyUp = () => {\n    setIsKeyReleased(true);\n  };\n\n  const deleteTag = index => {\n    setTags(prevState => prevState.filter((tag, i) => i !== index));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag\",\n        children: [tag, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTag(index),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 30\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        placeholder: \"Enter a tag\",\n        onKeyDown: onKeyDown,\n        onKeyUp: onKeyUp,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"Mh58ArYkiTY5DhcpzTF7cppOnWI=\");\n\n_c = Tag;\nexport default Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["C:/Users/viraj/Desktop/HMTLCSS/carnot/carnotapp/src/components/Tag.jsx"],"names":["useState","React","TagItem","Tag","input","setInput","tags","setTags","isKeyReleased","setIsKeyReleased","message","setMessage","checkValid","length","includes","onChange","e","value","target","onKeyDown","key","trimmedInput","trim","preventDefault","prevState","tagsCopy","poppedTag","pop","onKeyUp","deleteTag","index","filter","tag","i","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\r\nimport React from \"react\";\r\nimport './Tag.css';\r\nimport TagItem from \"./TagItem\";\r\n\r\n\r\nfunction Tag() {\r\n\r\n  const [input, setInput] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [isKeyReleased, setIsKeyReleased] = useState(false);\r\n  const [message, setMessage] = useState('Hello')\r\n\r\n\r\n    const checkValid = (input) => {\r\n      if(!input.length){\r\n        setMessage('Cant be empty')\r\n        return false\r\n      }\r\n      if(tags.includes(input)){\r\n        setMessage('Duplicate tag')\r\n        return false\r\n      }\r\n\r\n    }\r\n\r\n    \r\n    const onChange = (e) => {\r\n      const { value } = e.target;\r\n      setInput(value);\r\n    };\r\n\r\n    const onKeyDown = (e) => {\r\n      const { key } = e;\r\n      const trimmedInput = input.trim();\r\n    \r\n      if ((key === ',' || key===\"Enter\") && checkValid(trimmedInput)) {\r\n        e.preventDefault();\r\n        setTags(prevState => [...prevState, trimmedInput]);\r\n        setInput('');\r\n      }\r\n    \r\n      if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\r\n        const tagsCopy = [...tags];\r\n        const poppedTag = tagsCopy.pop();\r\n        e.preventDefault();\r\n        setTags(tagsCopy);\r\n        setInput(poppedTag);\r\n      }\r\n    \r\n      setIsKeyReleased(false);\r\n    };\r\n    \r\n    const onKeyUp = () => {\r\n      setIsKeyReleased(true);\r\n    }\r\n\r\n\r\n    const deleteTag = (index) => {\r\n      setTags(prevState => prevState.filter((tag, i) => i !== index))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n    <div className=\"container\">\r\n    {tags.map((tag,index) => <div className=\"tag\">{tag}<button onClick={() => deleteTag(index)}>x</button></div>)}\r\n    <input\r\n      value={input}\r\n      placeholder=\"Enter a tag\"\r\n      onKeyDown={onKeyDown}\r\n      onKeyUp={onKeyUp}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n  \r\n  {message && <div className=\"message\">{message}</div>}\r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Tag"]},"metadata":{},"sourceType":"module"}