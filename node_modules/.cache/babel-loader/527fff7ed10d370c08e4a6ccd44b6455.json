{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viraj\\\\Desktop\\\\HMTLCSS\\\\carnot\\\\carnotapp\\\\src\\\\components\\\\Tag.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport './Tag.css';\nimport TagItem from \"./TagItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tag() {\n  _s();\n\n  const [tags, setTags] = useState([]);\n  const tagInput = /*#__PURE__*/React.createRef();\n\n  const cullTexttoTags = textToRemove => {\n    setTags(tags.filter(tag => tag !== textToRemove));\n  };\n\n  const addTags = event => {\n    if (event.key === \"Enter\" && event.target.value !== \"\") {\n      setTags([...tags, event.target.value]);\n      props.selectedTags([...tags, event.target.value]);\n      event.target.value = \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tag\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tagContainer\",\n        children: tags.map(tag => /*#__PURE__*/_jsxDEV(TagItem, {\n          text: tag,\n          cullTexttoTags: cullTexttoTags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: tagInput,\n        type: \"text\",\n        onChange: e => pushTextToTags(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"DL0uTSUGlGEljgppeJDEmbue1U0=\");\n\n_c = Tag;\nexport default Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["C:/Users/viraj/Desktop/HMTLCSS/carnot/carnotapp/src/components/Tag.jsx"],"names":["useState","React","TagItem","Tag","tags","setTags","tagInput","createRef","cullTexttoTags","textToRemove","filter","tag","addTags","event","key","target","value","props","selectedTags","map","e","pushTextToTags"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMM,QAAQ,gBAAGL,KAAK,CAACM,SAAN,EAAjB;;AAEA,QAAMC,cAAc,GAAGC,YAAY,IAAI;AACrCJ,IAAAA,OAAO,CAACD,IAAI,CAACM,MAAL,CAAYC,GAAG,IAAIA,GAAG,KAAKF,YAA3B,CAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAGC,KAAK,IAAI;AACvB,QAAIA,KAAK,CAACC,GAAN,KAAc,OAAd,IAAyBD,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAApD,EAAwD;AAClDX,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUS,KAAK,CAACE,MAAN,CAAaC,KAAvB,CAAD,CAAP;AACAC,MAAAA,KAAK,CAACC,YAAN,CAAmB,CAAC,GAAGd,IAAJ,EAAUS,KAAK,CAACE,MAAN,CAAaC,KAAvB,CAAnB;AACAH,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,EAArB;AACH;AACJ,GAND;;AAQF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,kBACGZ,IAAI,CAACe,GAAL,CAASR,GAAG,iBAAK,QAAC,OAAD;AAAS,UAAA,IAAI,EAAEA,GAAf;AAAoB,UAAA,cAAc,EAAEH;AAApC;AAAA;AAAA;AAAA;AAAA,gBAAjB;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAKA;AAAO,QAAA,GAAG,EAAEF,QAAZ;AAAsB,QAAA,IAAI,EAAC,MAA3B;AAAkC,QAAA,QAAQ,EAAEc,CAAC,IAAEC,cAAc,CAACD,CAAC,CAACL,MAAF,CAASC,KAAV;AAA7D;AAAA;AAAA;AAAA;AAAA,cALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA7BQb,G;;KAAAA,G;AA+BT,eAAeA,GAAf","sourcesContent":["import { useState } from \"react\"\r\nimport React from \"react\";\r\nimport './Tag.css';\r\nimport TagItem from \"./TagItem\";\r\n\r\nfunction Tag() {\r\n\r\n    const [tags, setTags] = useState([])\r\n    \r\n    const tagInput = React.createRef();\r\n\r\n    const cullTexttoTags = textToRemove => {\r\n      setTags(tags.filter(tag => tag !== textToRemove))\r\n    }\r\n\r\n    const addTags = event => {\r\n      if (event.key === \"Enter\" && event.target.value !== \"\") {\r\n            setTags([...tags, event.target.value]);\r\n            props.selectedTags([...tags, event.target.value]);\r\n            event.target.value = \"\";\r\n        }\r\n    };\r\n\r\n  return (\r\n    <div className=\"tag\">\r\n      <div className=\"tagArea\">\r\n        <div className=\"tagContainer\"> \r\n          {tags.map(tag => (<TagItem text={tag} cullTexttoTags={cullTexttoTags}/>))}\r\n        </div>\r\n      \r\n      <input ref={tagInput} type='text' onChange={e=>pushTextToTags(e.target.value)}></input>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tag"]},"metadata":{},"sourceType":"module"}