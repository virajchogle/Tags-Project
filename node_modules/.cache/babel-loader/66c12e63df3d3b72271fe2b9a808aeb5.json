{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viraj\\\\Desktop\\\\HMTLCSS\\\\carnot\\\\carnotapp\\\\src\\\\components\\\\Tag.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport React from \"react\";\nimport './Tag.css';\nimport TagItem from \"./TagItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Tag() {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [tags, setTags] = useState([]);\n  const [isKeyReleased, setIsKeyReleased] = useState(false);\n  const tagInput = /*#__PURE__*/React.createRef();\n\n  const onChange = e => {\n    const {\n      value\n    } = e.target;\n    setInput(value);\n  };\n\n  const deleteTag = index => {\n    setTags(prevState => prevState.filter((tag, i) => i !== index));\n  };\n\n  const onKeyDown = e => {\n    const {\n      key\n    } = e;\n    const trimmedInput = input.trim();\n\n    if (key === ',' && trimmedInput.length && !tags.includes(trimmedInput)) {\n      e.preventDefault();\n      setTags(prevState => [...prevState, trimmedInput]);\n      setInput('');\n    }\n\n    if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\n      const tagsCopy = [...tags];\n      const poppedTag = tagsCopy.pop();\n      e.preventDefault();\n      setTags(tagsCopy);\n      setInput(poppedTag);\n    }\n\n    setIsKeyReleased(false);\n  };\n\n  const onKeyUp = () => {\n    setIsKeyReleased(true);\n  };\n\n  const addTags = event => {\n    if ((event.key === \"Enter\" || event.key === ',') && event.target.value !== \"\") {\n      setTags([...tags, event.target.value]);\n      props.selectedTags([...tags, event.target.value]);\n      event.target.value = \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [tags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tag\",\n      children: tag\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 24\n    }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      placeholder: \"Enter a tag\",\n      onKeyDown: onKeyDown,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Tag, \"+2MURdtB7lHr9WTH/SDpxt2rXVQ=\");\n\n_c = Tag;\nexport default Tag;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tag\");","map":{"version":3,"sources":["C:/Users/viraj/Desktop/HMTLCSS/carnot/carnotapp/src/components/Tag.jsx"],"names":["useState","React","TagItem","Tag","input","setInput","tags","setTags","isKeyReleased","setIsKeyReleased","tagInput","createRef","onChange","e","value","target","deleteTag","index","prevState","filter","tag","i","onKeyDown","key","trimmedInput","trim","length","includes","preventDefault","tagsCopy","poppedTag","pop","onKeyUp","addTags","event","props","selectedTags","map"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\r\nimport React from \"react\";\r\nimport './Tag.css';\r\nimport TagItem from \"./TagItem\";\r\n\r\n\r\nfunction Tag() {\r\n\r\n  const [input, setInput] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const [isKeyReleased, setIsKeyReleased] = useState(false);\r\n    \r\n    const tagInput = React.createRef();\r\n\r\n    const onChange = (e) => {\r\n      const { value } = e.target;\r\n      setInput(value);\r\n    };\r\n\r\n    const deleteTag = (index) => {\r\n      setTags(prevState => prevState.filter((tag, i) => i !== index))\r\n    }\r\n\r\n    const onKeyDown = (e) => {\r\n      const { key } = e;\r\n      const trimmedInput = input.trim();\r\n    \r\n      if (key === ',' && trimmedInput.length && !tags.includes(trimmedInput)) {\r\n        e.preventDefault();\r\n        setTags(prevState => [...prevState, trimmedInput]);\r\n        setInput('');\r\n      }\r\n    \r\n      if (key === \"Backspace\" && !input.length && tags.length && isKeyReleased) {\r\n        const tagsCopy = [...tags];\r\n        const poppedTag = tagsCopy.pop();\r\n        e.preventDefault();\r\n        setTags(tagsCopy);\r\n        setInput(poppedTag);\r\n      }\r\n    \r\n      setIsKeyReleased(false);\r\n    };\r\n    \r\n    const onKeyUp = () => {\r\n      setIsKeyReleased(true);\r\n    }\r\n\r\n    const addTags = event => {\r\n      if ((event.key === \"Enter\" || event.key===',') && event.target.value !== \"\") {\r\n          setTags([...tags, event.target.value]);\r\n          props.selectedTags([...tags, event.target.value]);\r\n          event.target.value = \"\";\r\n      }\r\n    };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    {tags.map((tag) => <div className=\"tag\">{tag}</div>)}\r\n    <input\r\n      value={input}\r\n      placeholder=\"Enter a tag\"\r\n      onKeyDown={onKeyDown}\r\n      onChange={onChange}\r\n    />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Tag"]},"metadata":{},"sourceType":"module"}